import { throttle, throttle1, throttle2 } from './throttle.js'

beforeEach(() => {
  jest.useFakeTimers()
})
it('时间戳方法 - 有头无尾: 首次会立马执行, 之后隔N秒执行一次', () => {
  const fn = jest.fn()
  const throttledFn = throttle(fn, 100)
  throttledFn()
  expect(fn).toHaveBeenCalledTimes(1)
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(20)
  throttledFn()
  expect(fn).toHaveBeenCalledTimes(2)
  jest.advanceTimersByTime(50)
  throttledFn()
  jest.advanceTimersByTime(50)
  throttledFn()
  expect(fn).toHaveBeenCalledTimes(3)
})

it('定时函数方法 - 无头有尾: 首次不会马上执行, N秒后才会执行, 停止触发后N秒还会执行一次', () => {
  const fn = jest.fn()
  const throttledFn = throttle1(fn, 100)
  throttledFn()
  expect(fn).not.toBeCalled()
  jest.advanceTimersByTime(100)
  expect(fn).toHaveBeenCalledTimes(1)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  expect(fn).toHaveBeenCalledTimes(1)
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  expect(fn).toHaveBeenCalledTimes(1)
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(30)
  expect(fn).toHaveBeenCalledTimes(2)
  throttledFn()
  expect(fn).toHaveBeenCalledTimes(2)
  jest.advanceTimersByTime(50)
  throttledFn()
  jest.advanceTimersByTime(50)
  expect(fn).toHaveBeenCalledTimes(3)
})

it('有头有尾: 首次会马上执行, N秒后才会执行, 停止触发后N秒还会执行一次', () => {
  const fn = jest.fn()
  const throttledFn = throttle2(fn, 100)
  throttledFn()
  expect(fn).toHaveBeenCalledTimes(1)
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  jest.advanceTimersByTime(10)
  throttledFn()
  expect(fn).toHaveBeenCalledTimes(1)
  jest.advanceTimersByTime(80)
  expect(fn).toHaveBeenCalledTimes(2)
  jest.advanceTimersByTime(10)
  throttledFn()
  throttledFn()
  jest.advanceTimersByTime(90)
  expect(fn).toHaveBeenCalledTimes(3)
})
